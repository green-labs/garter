// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_obj from "@rescript/std/lib/es6/caml_obj.js";
import * as Garter_Math from "../../src/Garter_Math.mjs";

function testEqual(lhs, rhs) {
  if (Caml_obj.caml_equal(lhs, rhs)) {
    return ;
  }
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "Math_test.res",
          4,
          2
        ],
        Error: new Error()
      };
}

if (Garter_Math.clamp_float(0, 0.5, 1.15) !== 0.5) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "Math_test.res",
          11,
          0
        ],
        Error: new Error()
      };
}

if (Garter_Math.clamp_float(10, 0.5, 1.15) !== 1.15) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "Math_test.res",
          14,
          0
        ],
        Error: new Error()
      };
}

if (Garter_Math.clamp_float(1, 0.5, 1.15) !== 1.0) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "Math_test.res",
          17,
          0
        ],
        Error: new Error()
      };
}

if (!Number.isNaN(Garter_Math.clamp_float(0, NaN, 1.15))) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "Math_test.res",
          20,
          0
        ],
        Error: new Error()
      };
}

if (!Number.isNaN(Garter_Math.clamp_float(0, NaN, NaN))) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "Math_test.res",
          21,
          0
        ],
        Error: new Error()
      };
}

if (!Number.isNaN(Garter_Math.clamp_float(NaN, 0.5, 1.15))) {
  throw {
        RE_EXN_ID: "Assert_failure",
        _1: [
          "Math_test.res",
          22,
          0
        ],
        Error: new Error()
      };
}

var lower = 0.5;

var upper = 1.15;

export {
  testEqual ,
  lower ,
  upper ,
  
}
/*  Not a pure module */
