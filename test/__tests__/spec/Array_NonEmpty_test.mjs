// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Zora from "@dusty-phillips/rescript-zora/src/Zora.mjs";
import * as Zora$1 from "zora";
import * as Belt_Option from "@rescript/std/lib/es6/belt_Option.js";
import * as Garter_Array from "../../../src/Garter_Array.mjs";

function testEqual(t, name, lhs, rhs) {
  t.test(name, (function (t) {
          t.equal(lhs, rhs, name);
          return Zora.done(undefined);
        }));
  
}

var emptyArray = Garter_Array.NonEmpty.fromArray([]);

var nonEmptyArray = Garter_Array.NonEmpty.fromArrayExn([
      1,
      2,
      3,
      4,
      5
    ]);

Zora$1.test("fromArray", (function (t) {
        return testEqual(t, "Empty", Garter_Array.NonEmpty.fromArray([]), undefined);
      }));

Zora$1.test("toArray", (function (t) {
        testEqual(t, "Empty", Belt_Option.map(emptyArray, Garter_Array.NonEmpty.toArray), undefined);
        return testEqual(t, "NonEmpty", Garter_Array.NonEmpty.toArray(nonEmptyArray), [
                    1,
                    2,
                    3,
                    4,
                    5
                  ]);
      }));

Zora$1.test("first", (function (t) {
        testEqual(t, "Empty", Belt_Option.map(emptyArray, Garter_Array.NonEmpty.first), undefined);
        return testEqual(t, "NonEmpty", Garter_Array.NonEmpty.first(nonEmptyArray), 1);
      }));

Zora$1.test("last", (function (t) {
        testEqual(t, "Empty", Belt_Option.map(emptyArray, Garter_Array.NonEmpty.last), undefined);
        return testEqual(t, "NonEmpty", Garter_Array.NonEmpty.last(nonEmptyArray), 5);
      }));

Zora$1.test("take", (function (t) {
        testEqual(t, "1", Garter_Array.NonEmpty.take(nonEmptyArray, -1), []);
        testEqual(t, "2", Garter_Array.NonEmpty.take(nonEmptyArray, 2), [
              1,
              2
            ]);
        return testEqual(t, "3", Garter_Array.NonEmpty.take(nonEmptyArray, 7), [
                    1,
                    2,
                    3,
                    4,
                    5
                  ]);
      }));

export {
  testEqual ,
  emptyArray ,
  nonEmptyArray ,
  
}
/* emptyArray Not a pure module */
